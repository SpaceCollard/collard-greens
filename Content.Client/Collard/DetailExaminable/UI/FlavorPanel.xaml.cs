using Content.Client.Administration.Managers;
using Content.Client.UserInterface.Controls;
using Content.Shared.Administration;
using Content.Shared.Collard.Humanoid;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Network;
using Robust.Shared.Utility;
using Content.Shared.Humanoid;
using Robust.Client.GameObjects;

namespace Content.Client.Collard.DetailExaminable.UI;

[GenerateTypedNameReferences]
public sealed partial class FlavorPanel : FancyWindow
{
    [Dependency] private readonly EntityManager _entityManager = default!;
    public NetEntity? TargetEntityId { get; set; }
    public string? Pose { get; set; }
    public string? Flavor { get; set; }
    public ERPStatus Status { get; set; }
    public string? CharName { get; set; }

    public FlavorPanel()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void SetCharacterName(string player)
    {
        CharacterName.Text = player;
    }

    public void SetFlavorText(string flavor)
    {
        var msg = new FormattedMessage();
        msg.AddMarkupOrThrow(flavor);
        msg.Pop();

        FlavorTextText.SetMessage(msg);
    }

    public void SetPoseText(string pose)
    {
        var msg = new FormattedMessage();
        msg.AddMarkupOrThrow(pose);
        msg.Pop();

        PoseText.SetMessage(msg);
    }

    public void SetERPStatus(ERPStatus status)
    {
        var msg = new FormattedMessage();
        var text = Loc.GetString("flavor-panel-erp-ask");
        switch (status)
        {
            /*case ERPStatus.No:
                text = Loc.GetString("flavor-panel-erp-no");
                break;*/
            case ERPStatus.Ask:
                text = Loc.GetString("flavor-panel-erp-ask");
                break;
            case ERPStatus.Yes:
                text = Loc.GetString("flavor-panel-erp-yes");
                break;
        }

        msg.AddMarkupOrThrow(text);
        msg.Pop();

        ErpStatus.SetMessage(msg);
    }

    public void SetSprite()
    {
        if (TargetEntityId is null) return;
        SpriteView.SetEntity(TargetEntityId.Value);
    }

}
